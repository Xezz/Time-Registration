<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.xezz</groupId>
    <artifactId>timeregistration</artifactId>
    <version>1.2.2-SNAPSHOT</version>
    <modules>
        <module>trex-backend</module>
        <module>trex-integrationtests</module>
        <module>trex-webapp</module>
    </modules>
    <packaging>pom</packaging>

    <name>Zeitabrechnung</name>
    <url>http://www.xezz.org</url>

    <properties>
        <!-- Project specific props -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <aspectj-maven-plugin.version>1.4</aspectj-maven-plugin.version>
        <!-- Test -->
        <junit.version>4.11</junit.version>
        <mockito-core.version>1.9.5</mockito-core.version>

        <!-- Container / JavaEE -->
        <javax-persistence.version>2.0.0</javax-persistence.version>
        <javax-inject.version>1</javax-inject.version>
        <jstl.version>1.2</jstl.version>
        <!-- TODO: Maybe use a new version, but 2.5 seems to be the current release? -->
        <!-- might be that tomcat 7 has it already deployed as 3.x? -->
        <servlet-api.version>3.0.1</servlet-api.version>
        <jsp-api.version>2.1</jsp-api.version>

        <!-- Spring -->
        <spring.version>3.2.3.RELEASE</spring.version>
        <spring-data.version>1.3.2.RELEASE</spring-data.version>

        <!-- Compile Time Weaving -->
        <org-aspectj-version>1.6.11</org-aspectj-version>

        <!-- marshalling -->
        <jackson.version>2.1.4</jackson.version>
        <jackson-mapper-asl.version>1.9.12</jackson-mapper-asl.version>
        <jaxb-api.version>2.2.7</jaxb-api.version>
        <xstream.version>1.4.4</xstream.version>

        <!-- sqlite -->
        <sqlite-jdbc.version>3.7.2</sqlite-jdbc.version>
        <slf4j-api.version>1.7.1</slf4j-api.version>
        <openjpa-asm-shaded.version>2.2.0</openjpa-asm-shaded.version>
        <openjpa-maven-plugin.version>2.2.2</openjpa-maven-plugin.version>
        <openjpa.version>2.2.0</openjpa.version>
        <hibernate-validator.version>4.3.0.Final</hibernate-validator.version>
        <!-- compiler settings -->
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Only unit tests are run by default. -->
        <build-helper-maven-plugin.version>1.7</build-helper-maven-plugin.version>
        <!-- testing / integration testing -->
        <maven-failsafe-plugin.version>2.12</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.12</maven-surefire-plugin.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <h2.version>1.3.172</h2.version>
        <dbunit.version>2.4.8</dbunit.version>
        <spring-test-dbunit.version>1.0.0</spring-test-dbunit.version>
        <hamcrest-library.version>1.3</hamcrest-library.version>
        <hsqldb.version>2.0.0</hsqldb.version>
        <cobertura-maven-plugin.version>2.5.2</cobertura-maven-plugin.version>
        <findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
        <maven-pmd-plugin.version>3.0.1</maven-pmd-plugin.version>
    </properties>
    <repositories>
        <repository>
            <id>Default repo</id>
            <url>http://repo2.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>spring-maven-release</id>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <name>Springframework Maven RELEASE Repository</name>
            <url>http://repo.springframework.org/release</url>
        </repository>
        <repository>
            <id>EclipseLink</id>
            <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
        </repository>
        <repository>
            <id>EclipseLink Repo</id>
            <url>http://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>spring-maven-snapshot</id>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <name>Springframework Maven SNAPSHOT Repository</name>
            <url>http://repo.springframework.org/snapshot</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- OpenJPA dependency required to enhance entities at compile time -->
            <dependency>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa</artifactId>
                <version>${openjpa.version}</version>
                <scope>provided</scope>
            </dependency>


            <!-- spring logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- validating entities (NotNull for example) -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Persistence API -->
            <dependency>
                <!-- Maybe normal javax persistence? -->
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>javax.persistence</artifactId>
                <version>${javax-persistence.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Spring framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring jpa data -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring-data.version}</version>
            </dependency>
            <!-- JSR-330 -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax-inject.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Jackson Dependencies -->
            <!-- XML / JSON Binding -->
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>${jackson-mapper-asl.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Spring Test -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Unit test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.springtestdbunit</groupId>
                <artifactId>spring-test-dbunit</artifactId>
                <version>${spring-test-dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest-library.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>${aspectj-maven-plugin.version}</version>
                <configuration>
                    <!-- Required as the plugin does not resolve this by default -->
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
                <configuration>
                    <instrumentation>
                        <ignores>
                            <ignore>org.xezz.timeregistration.*</ignore>
                        </ignores>
                        <excludes>
                            <exclude>org/xezz/**/*Test.class</exclude>
                        </excludes>
                    </instrumentation>
                    <check>
                        <haltOnFailure>false</haltOnFailure>
                    </check>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <!-- States that the plugin's add-test-source goal is executed at generate-test-sources phase. -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of integration tests. -->
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <!-- Excludes integration tests when unit tests are run. ß-->
                    <excludes>
                        <!-- all integration tests have to be prepended with IT -->
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Execute the integration tests with the failsafe plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!-- States that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
